# Copyright 2021-2022 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Connect specified VM CDROM if CDROM device number is set, or the first
# found CDROM if CDROM device number is not set to the datastore ISO file.
# Parameters:
#   vm_cdrom_device_num (optinal): The CDROM device number. Default is 1.
#   vm_cdrom_iso_file: The datastore ISO file to connect to.
#
- name: "Initialize variables for CDROM config"
  set_fact:
    vm_cdrom_device_info: ""
    vm_cdrom_controller_info: ""
    vm_cdrom_controller_type: "{{ cdrom_controller_type | default('sata') }}"
    vm_cdrom_controller_num: 0
    vm_cdrom_unit_num: 0
    vm_cdrom_current_connected: ""

- include_tasks: vm_get_device_with_label.yml
  vars:
    device_label: "CD/DVD drive {{ vm_cdrom_device_num | int }}"
  when:
    - vm_cdrom_device_num is defined
    - vm_cdrom_device_num | int >= 1

- block:
    - name: "Initialize device info variable"
      set_fact:
        device_info_with_label: ""
    - include_tasks: vm_get_device_with_label.yml
      vars:
        device_label: "CD/DVD drive {{ item }}"
      loop: "{{ range(1, 5) | list }}" 
      when: not device_info_with_label        
  when: vm_cdrom_device_num is undefined

- name: "Check VM has expected CDROM"
  assert:
    that:
      - device_info_with_label is defined
      - device_info_with_label
    fail_msg: "Not get VM 'CD/DVD drive {{ vm_cdrom_device_num | int | default ('') }}' device info."

# VM has existing CDROM
- block:
    - name: "Set the fact of CDROM device"
      set_fact:
        vm_cdrom_device_info: "{{ device_info_with_label }}"

    # Get CDROM controller info
    - include_tasks: vm_get_device_with_key.yml
      vars:
        device_key: "{{ vm_cdrom_device_info.controllerKey }}"

    - name: "Set the fact of CDROM controller"
      set_fact:
        vm_cdrom_controller_info: "{{ device_info_with_key }}"

    - name: "Set CDROM controller type to SATA"
      set_fact:
        vm_cdrom_controller_type: "sata"
      when: "'SATA' in vm_cdrom_controller_info.deviceInfo.label"

    - name: "Set CDROM controller type to IDE"
      set_fact:
        vm_cdrom_controller_type: "ide"
      when: "'IDE' in vm_cdrom_controller_info.deviceInfo.label"

    - name: "Get CDROM controller bus number, unit number, and connected state"
      set_fact:
        vm_cdrom_controller_num: "{{ vm_cdrom_controller_info.busNumber }}"
        vm_cdrom_unit_num: "{{ vm_cdrom_device_info.unitNumber }}"
        vm_cdrom_current_connected: "{{ vm_cdrom_device_info.connectable.connected }}"
  when:
    - device_info_with_label is defined
    - device_info_with_label

# Disconnect the CDROM for a force reconnect
- include_tasks: vm_configure_cdrom.yml
  vars:
    cdrom_type: client
    cdrom_controller_type: "{{ vm_cdrom_controller_type }}"
    cdrom_controller_num: "{{ vm_cdrom_controller_num }}"
    cdrom_unit_num: "{{ vm_cdrom_unit_num }}"
    cdrom_state: "present"
  when: vm_cdrom_current_connected | bool

# Add or update CDROM to connect OS ISO
- include_tasks: vm_configure_cdrom.yml
  vars:
    cdrom_type: iso
    cdrom_iso_file: "{{ vm_cdrom_iso_file }}"
    cdrom_controller_type: "{{ vm_cdrom_controller_type }}"
    cdrom_controller_num: "{{ vm_cdrom_controller_num }}"
    cdrom_unit_num: "{{ vm_cdrom_unit_num }}"
    cdrom_state: "present"
