# Copyright 2023 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
- name: "Initialize the facts of Workstation installation file"
  ansible.builtin.set_fact:
    dh_host_download_path: "C:\\Users\\{{ host_machine_username }}\\Downloads\\"
    ws_install_file_name: "{{ workstation_download_url | ansible.builtin.basename }}"

- name: "Check Workstation installation file name"
  ansible.builtin.assert:
    that:
      - ws_install_file_name
      - ws_install_file_name.split('.')[-1] | lower == "exe"
    fail_msg: "Get Workstation installation file name '{{ ws_install_file_name }}' from configured URL '{{ workstation_download_url }}', file suffix is not 'exe' for Windows host."

- name: "Set fact of Workstation installation file download path and log path"
  ansible.builtin.set_fact:
    ws_install_file_path: "{{ dh_host_download_path }}{{ ws_install_file_name }}"
    ws_install_log_file: "{{ dh_host_download_path }}ws_install.log"

- name: "Download Workstation installation file in Windows host"
  ansible.windows.win_get_url:
    url: "{{ workstation_download_url }}"
    dest: "{{ ws_install_file_path }}"
    checksum: "{{ workstation_package_checksum | default(omit) }}"
    validate_certs: false
  delegate_to: "{{ host_machine_hostname }}"
  register: download_ws_result
- name: "Display the download result"
  ansible.builtin.debug: var=download_ws_result

- name: "Check downloading Workstation installation file succeed"
  ansible.builtin.assert:
    that:
      - download_ws_result.status_code is defined
      - download_ws_result.status_code == 200
      - download_ws_result.dest is defined
      - download_ws_result.dest == ws_install_file_path
    fail_msg: "Downloading Workstation installation file result status code '{{ download_ws_result.status_code | default('') }}' is not 200, or file dest '{{ download_ws_result.dest | default('') }}' is not expected '{{ ws_install_file_path }}'."

- name: "Display downloaded Workstation installation file info"
  ansible.builtin.debug:
    msg:
      - "Downloaded Workstation installation file name: {{ ws_install_file_name }}"
      - "Downloaded Workstation installation file path: {{ ws_install_file_path }}"

- name: "Set fact of Workstation silent install command"
  ansible.builtin.set_fact:
    ws_install_cmd: "{{ ws_install_file_path }} /s /v/qn EULAS_AGREED=1 /l {{ ws_install_log_file }} AUTOSOFTWAREUPDATE=0 DATACOLLECTION=0" 

- name: "Add Workstation install path to install command"
  ansible.builtin.set_fact:
    ws_install_cmd: "{{ ws_install_cmd }} ~ ' INSTALLDIR=' ~ {{ workstation_install_path }}'"
  when:
    - workstation_install_path is defined
    - workstation_install_path

- name: "Add Workstation serial number to install command"
  ansible.builtin.set_fact:
    ws_install_cmd: "{{ ws_install_cmd }} ~ ' SERIALNUMBER=' ~ {{ workstation_serial_number }}'"
  when:
    - workstation_serial_number is defined
    - workstation_serial_number

- name: "Display Workstation silent install command"
  ansible.builtin.debug: var=ws_install_cmd

- name: "Execute Workstation silent install"
  include_tasks: ../../windows/utils/win_execute_cmd.yml
  vars:
    win_powershell_cmd: "{{ ws_install_cmd }}"
    vm_guest_ip: "{{ host_machine_hostname }}"
- name: "Pause 15 seconds"
  ansible.builtin.pause:
    seconds: 15
- name: "Check VMware Workstation is installed"
  include_tasks: ../../windows/utils/win_wait_installed_software.yml
  vars:
    win_software_name: "VMware Workstation"
    vm_guest_ip: "{{ host_machine_hostname }}"

- name: "Set fact of Workstation default install path"
  ansible.builtin.set_fact:
    dh_installed_path: "{{ 'C:\\Program Files (x86)\\VMware\\VMware Workstation' if (workstation_install_path is undefined or not workstation_install_path) else workstation_install_path }}"
