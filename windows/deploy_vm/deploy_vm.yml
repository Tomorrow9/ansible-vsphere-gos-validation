# Copyright 2021-2022 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Description:
#   This test case is used for deploying new Windows VM and installing
# guest OS in VM automatically using Autounattend.xml file when
# 'vm_deploy_method' is set to 'iso', if 'vm_deploy_method' is set to 'ova',
# will deploy a new Windows VM using configured OVA or OVF template files.
#
- name: deploy_vm
  hosts: localhost
  gather_facts: no
  vars_files:
    - "{{ testing_vars_file | default('../../vars/test.yml') }}"
  tasks:
    - include_tasks: ../../common/skip_test_case.yml
      vars:
        skip_msg: "Skip test case due to new_vm is set to '{{ new_vm | default(False) }}'"
        skip_reason: "No Run"
      when: new_vm is undefined or not new_vm|bool

    - block:
        - name: "Set current test case log path on local machine"
          set_fact:
            current_test_log_folder: "{{ testrun_log_path }}/{{ ansible_play_name }}"
        - name: "Create the current test case log folder with mode '0755'"
          file:
            path: "{{ current_test_log_folder }}"
            state: directory
            mode: '0755'
          register: create_log_path
        - debug: var=create_log_path
          when: enable_debug is defined and enable_debug
        
        - include_tasks: deploy_vm_from_iso.yml
          when: >
            (vm_deploy_method is undefined) or
            (vm_deploy_method | lower == 'iso')

        - include_tasks: deploy_vm_from_ova.yml
          when:
            - vm_deploy_method is defined
            - vm_deploy_method | lower == 'ova' 

        - name: "Print VM guest IP address"
          debug: var=vm_guest_ip
        - include_tasks: ../utils/add_windows_host.yml

        # Take screenshot of VM after guest OS install
        - include_tasks: ../../common/vm_take_screenshot.yml
          vars:
            vm_take_screenshot_local_path: "{{ current_test_log_folder }}"
      rescue:
        - include_tasks: ../../common/test_rescue.yml
          vars:
            exit_testing_when_fail: True
