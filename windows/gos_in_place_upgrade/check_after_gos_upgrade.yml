# Copyright 2022 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Check VMware tools status
- include_tasks: ../utils/win_get_service_status.yml
  vars:
    win_service_name: "VMTools"
- name: "Verify VMware Tools service is running in guest OS"
  ansible.builtin.assert:
    that:
      - service_status == "Running"
    fail_msg: "VMware Tools service is not 'Running': {{ service_status }}"

# Get guest system info after uprading
- include_tasks: get_system_info.yml
  vars:
    filter: "ansible_*"
- name: "Set facts of guest system info after upgrading"
  ansible.builtin.set_fact:
    win_distr_after_upgrade: "{{ guest_system_info.ansible_distribution | default('') }}"
    win_distr_ver_after_upgrade: "{{ guest_system_info.ansible_distribution_version | default('') }}"
- name: "Display the guest OS info after OS upgrade"
  ansible.builtin.debug:
    msg:
      - "Guest OS after OS upgrade: {{ win_distr_after_upgrade }}"
      - "Guest OS version after OS upgrade: {{ win_distr_ver_after_upgrade }}"

# Check no problem device
- include_tasks: ../utils/win_get_problem_device.yml
- name: "Check no problem device listed"
  ansible.builtin.assert:
    that:
      - gos_has_problem_device is defined
      - not gos_has_problem_device
    fail_msg: "Problem devices are found in guest after guest OS upgrade, please check listed problem devices: {{ gos_problem_device_list }}"

# Get loaded pvscsi and vmxnet3 driver version
- include_tasks: ../utils/win_get_device_driver.yml
  vars:
    win_device_desc_keyword: 'pvscsi'
- name: "Set fact of the loaded PVSCSI driver info"
  ansible.builtin.set_fact:
    win_pvscsi_after_upgrade: "{{ win_guest_device_driver }}"

- include_tasks: ../utils/win_get_device_driver.yml
  vars:
    win_device_desc_keyword: 'vmxnet3'
- name: "Set fact of the loaded VMXNET3 driver info"
  ansible.builtin.set_fact:
    win_vmxnet3_after_upgrade: "{{ win_guest_device_driver }}"

- name: "Check loaded PVSCSI and VMXNET3 drivers version"
  ansible.builtin.assert:
    that:
      - win_pvscsi_after_upgrade.DriverVersion is defined
      - win_pvscsi_before.DriverVersion is defined
      - win_pvscsi_after_upgarde.DriverVersion == win_pvscsi_before.DriverVersion
      - win_vmxnet3_after_upgrade.DriverVersion is defined
      - win_vmxnet3_before.DriverVersion is defined
      - win_vmxnet3_after_upgrade.DriverVersion == win_vmxnet3_before.DriverVersion
    fail_msg:
      - "After OS upgrade, the loaded PVSCSI or VMXNET3 driver version is not the same as before OS Upgrade."
      - "PVSCSI, after version: {{ win_pvscsi_after_upgrade.DriverVersion | default('') }}, before version: {{ win_pvscsi_before.DriverVersion | default('') }}."
      - "VMXNET3, after version: {{ win_vmxnet3_after_upgrade.DriverVersion | default('') }}, before version: {{ win_vmxnet3_before.DriverVersion | default('') }}"
