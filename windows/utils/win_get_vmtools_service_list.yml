# Copyright 2021-2024 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Get VMware Tools installed services in Windows guest OS
# Parameters:
#   win_get_vmtools_service_retries: the retry time to get services list,
#     default value is 1.
#   win_get_vmtools_service_expect: the expected services list to get,
#     default value is [].
# Return:
#   vmtools_service_dict: VMware Tools services and service status dict.
#
- name: "Initialize VMware Tools services and status result"
  ansible.builtin.set_fact:
    vmtools_service_dict: {}

- name: "Retry to get VMware Tools services and status"
  ansible.windows.win_shell: "Get-Service | where-object {$_.displayname -match 'VMware'} | select Name, Status | ft -hide"
  register: get_vmtools_ser_result
  ignore_errors: true
  delegate_to: "{{ vm_guest_ip }}"
  ignore_unreachable: true
  retries: "{{ win_get_vmtools_service_retries | default(1) }}"
  delay: 5
  until:
    - get_vmtools_ser_result.stdout is defined
    - get_vmtools_ser_result.stdout
    - (win_get_vmtools_service_expect | default([]) | reject('in', get_vmtools_ser_result.stdout)) | length == 0

- name: "Set fact of VMware Tools services and status dict"
  ansible.builtin.set_fact:
    vmtools_service_dict: "{{ vmtools_service_dict | combine({item.split()[0]: item.split()[1]}) }}"
  with_items: "{{ get_vmtools_ser_result.stdout_lines | select }}"
  when:
    - get_vmtools_ser_result.stdout_lines is defined
    - get_vmtools_ser_result.stdout_lines | length != 0

- name: "Display VMware Tools services and status"
  ansible.builtin.debug: var=vmtools_service_dict
