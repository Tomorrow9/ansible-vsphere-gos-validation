# Copyright 2021-2024 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Get installed VMware Tools version and build number in Windows guest OS
# Return:
#   vmtools_version: VMware Tools version.
#   vmtools_build_number: VMware Tools build number.
#   vmtools_toolboxcmd_exists: Whether 'VMwareToolboxCmd.exe' exists in guest OS.
#
- name: "Initialize the facts of VMware Tools version and build info"
  ansible.builtin.set_fact:
    vmtools_info_from_vmtoolsd: ''
    vmtools_version: ''
    vmtools_major_version: ''
    vmtools_build_number: ''
    vmtools_toolboxcmd_exists: false
    vmtools_toolboxcmd_path: "C:\\Program Files\\VMware\\VMware Tools\\VMwareToolboxCmd.exe"
    vmtoolsd_path: "C:\\Program Files\\VMware\\VMware Tools\\vmtoolsd.exe"

- name: "Check whether 'VMwareToolboxCmd.exe' exists"
  include_tasks: ../utils/win_check_file_exist.yml
  vars:
    win_check_file_exist_file: "{{ vmtools_toolboxcmd_path }}"

- name: "Set fact of 'VMwareToolboxCmd.exe' existence status"
  ansible.builtin.set_fact:
    vmtools_toolboxcmd_exists: "{{ win_check_file_exist_result }}"

- name: "'VMwareToolboxCmd.exe' does not exist"
  when: not vmtools_toolboxcmd_exists
  block:
    - name: "Check whether 'vmtoolsd.exe' exists"
      include_tasks: ../utils/win_check_file_exist.yml
      vars:
        win_check_file_exist_file: "{{ vmtoolsd_path }}"
    - name: "'vmtoolsd.exe' does not exist"
      ansible.builtin.assert:
        that:
          - win_check_file_exist_result
        fail_msg: "File '{{ vmtoolsd_path }}' does not exist in guest OS."

- name: "Get VMware Tools info in guest OS"
  include_tasks: win_execute_cmd.yml
  vars:
    win_powershell_cmd: "& '{{ vmtools_toolboxcmd_exists | ternary(vmtools_toolboxcmd_path, vmtoolsd_path) }}' -v"

- name: "Set fact of VMware Tools info got in guest OS"
  ansible.builtin.set_fact:
    vmtools_info_from_vmtoolsd: "{{ win_powershell_cmd_output.stdout_lines[0] }}"
  when:
    - win_powershell_cmd_output.stdout_lines is defined
    - win_powershell_cmd_output.stdout_lines | length == 1

- name: "Set fact of VMware Tools major version and build number"
  ansible.builtin.set_fact:
    vmtools_major_version: "{{ vmtools_info_from_vmtoolsd | regex_findall('\\d+') | first }}"
    vmtools_build_number: "{{ vmtools_info_from_vmtoolsd | regex_findall('\\d+') | last }}"
  when: vmtools_info_from_vmtoolsd

- name: "Set fact of VMware Tools version"
  ansible.builtin.set_fact:
    vmtools_version: "{{ vmtools_info_from_vmtoolsd | regex_search('^(\\d+\\.){2}\\d+') }}"
  when:
    - vmtools_major_version
    - vmtools_major_version | int <= 12

- name: "Set fact of VMware Tools version"
  ansible.builtin.set_fact:
    vmtools_version: "{{ vmtools_info_from_vmtoolsd | regex_search('(\\d+\\.){3}\\d+') }}"
  when:
    - vmtools_major_version
    - vmtools_major_version | int > 12

- name: "Print VMware Tools info got in guest OS"
  ansible.builtin.debug: var=vmtools_info_from_vmtoolsd

- name: "Print VMware Tools version and build number"
  ansible.builtin.debug:
    msg: "Installed VMware Tools version: {{ vmtools_version }}, build number: {{ vmtools_build_number }}"

- name: "Set fact that VMware Tools info has been retrieved"
  ansible.builtin.set_fact:
    vmtools_info_retrieved: true
