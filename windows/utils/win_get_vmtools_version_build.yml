# Copyright 2021-2024 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Get installed VMware Tools version and build number in Windows guest OS
# Return:
#   vmtools_version: VMware Tools version
#   vmtools_build_number: VMware Tools build number
#
- name: "Initialize the facts of VMware Tools version and build info"
  ansible.builtin.set_fact:
    vmtools_info_from_vmtoolsd: ''
    vmtools_version: ''
    vmtools_build_number: ''

- name: "Execute 'VMwareToolboxCmd.exe' to get VMware Tools info in guest OS"
  include_tasks: win_execute_cmd.yml
  vars:
    win_powershell_cmd: "& 'C:\\Program Files\\VMware\\VMware Tools\\VMwareToolboxCmd.exe' -v"

- name: "Set fact of VMware Tools info got in guest OS"
  ansible.builtin.set_fact:
    vmtools_info_from_vmtoolsd: "{{ win_powershell_cmd_output.stdout_lines[0] }}"
  when:
    - win_powershell_cmd_output.stdout_lines is defined
    - win_powershell_cmd_output.stdout_lines | length == 1

- name: "Set fact of VMware Tools version and build number"
  ansible.builtin.set_fact:
    vmtools_version: "{{ vmtools_info_from_vmtoolsd.split(' ')[0].rsplit('.', 1)[0] }}"
    vmtools_build_number: "{{ vmtools_info_from_vmtoolsd.split(' ')[1][1:-1].split('-')[1] }}"
  when:
    - vmtools_info_from_vmtoolsd
    - vmtools_info_from_vmtoolsd | regex_search('^(\\d+\\.){3}\\d+ \\(build\\-\\d+\\)')

- name: "Set fact of VMware Tools version and build number"
  ansible.builtin.set_fact:
    vmtools_version: "{{ vmtools_info_from_vmtoolsd.split('.')[0] }}"
    vmtools_build_number: "{{ vmtools_info_from_vmtoolsd.split('.')[-1] }}"
  when:
    - vmtools_info_from_vmtoolsd
    - vmtools_info_from_vmtoolsd | regex_search('^(\\d+\\.){4}\\d+')

- name: "Print VMware Tools info got in guest OS"
  ansible.builtin.debug: var=vmtools_info_from_vmtoolsd

- name: "Print VMware Tools version and build number"
  ansible.builtin.debug:
    msg: "Installed VMware Tools version: {{ vmtools_version }}, build number: {{ vmtools_build_number }}"
