# Copyright 2023-2024 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Install Windows online updates in specified categories, skip optional
# ones or in a reject list in Windows guest OS.
# Parameters:
#   win_updates_categories (optional): A list of categories to install updates from.
#     Some possible categories are: Application, Connectors, Critical Updates,
#     Definition Updates, Developer Kits, Feature Packs, Guidance, Security Updates,
#     Service Packs, Tools, Update Rollups, Updates and Upgrades.
#   win_updates_reject_list (optional): A list of update titles or KB numbers that
#     can be used to specify which updates are to be excluded from installation.
#   win_updates_ignore_errors (optional): Whether to ignore errors when installing
#     Windows updates. Default is false.
#   win_updates_log_file (optional): The log file path for Windows Update in guest OS.
#     Default is 'C:\win_updates_log.txt'.
# Return:
#   win_online_updates_succeed: Will be set to 'true' in below conditions:
#     1. no Windows updates found,
#     2. there are Windows updates found, and the installed updates count is equal to
#        the found count,
#     3. there are Windows updates found, and the installed updates count is not equal
#        to the found count, but the failure messages of the not installed ones contain
#        the keywords representing failure can be ignored.
#        For example, 'failure_msg' is "Operation was not performed because there are
#        no applicable updates (WU_E_NOT_APPLICABLE 0x80240017)".
#     Other cases, it will be set to 'false'.
#   win_online_updates_installed: If set to 'true', there are at least one Windows online
#    updates installed in guest OS, or it will be 'false'.
#
- name: "Set fact and initialize Windows online updates install parameters"
  ansible.builtin.set_fact:
    win_updates_log_file: "{{ win_updates_log_file | default('C:\\win_updates_log.txt') }}"
    win_online_updates_succeed: false
    win_online_updates_installed: false
    win_updates_ignore_kws: ["no applicable"]

- name: "Install Windows online updates"
  ansible.windows.win_updates:
    server_selection: "windows_update"
    category_names: "{{ win_updates_categories | default(omit) }}"
    reject_list: "{{ win_updates_reject_list | default('') }}"
    log_path: "{{ win_updates_log_file }}"
    skip_optional: true
    state: "installed"
  delegate_to: "{{ vm_guest_ip }}"
  register: win_updates_install_result
  ignore_errors: "{{ win_updates_ignore_errors | default(false) }}"

- name: "Print Windows online updates install result"
  ansible.builtin.debug: var=win_updates_install_result
  when: enable_debug

- name: "Restart guest OS when required"
  when:
    - not win_updates_install_result.failed | default(true)
    - win_updates_install_result.reboot_required | default(false)
  block:
    - name: "Pause 10 seconds after Windows updates install"
      ansible.builtin.pause:
        seconds: 10
    - name: "Restart guest OS after Windows updates install"
      include_tasks: win_shutdown_restart.yml
      vars:
        set_win_power_state: "restart"
        win_reboot_timeout: 2700

- name: "Windows online updates install task succeeds"
  when:
    - win_updates_install_result.failed is defined
    - not win_updates_install_result.failed
    - win_updates_install_result.found_update_count is defined
    - win_updates_install_result.installed_update_count is defined
  block:
    # No updates found, so no updates installed
    - name: "Set fact of Windows online updates install succeeds"
      ansible.builtin.set_fact:
        win_online_updates_succeed: true
      when: win_updates_install_result.found_update_count | int == 0

    # Updates found, updates installed
    - name: "Installed update count is equal to found update count"
      ansible.builtin.set_fact:
        win_online_updates_succeed: true
        win_online_updates_installed: true
      when:
        - win_updates_install_result.found_update_count | int != 0
        - win_updates_install_result.installed_update_count | int == win_updates_install_result.found_update_count | int

    # Updates found, while some not installed
    - name: "Installed update count is not equal to found update count"
      when:
        - win_updates_install_result.found_update_count | int != 0
        - win_updates_install_result.found_update_count | int > win_updates_install_result.installed_update_count | int
      block:
        - name: "Set fact of Windows online updates install status"
          ansible.builtin.set_fact:
            win_online_updates_installed: true
          when: win_updates_install_result.installed_update_count | int != 0

        - name: "Set fact of not installed updates list"
          ansible.builtin.set_fact:
            win_updates_not_installed: "{{ win_updates_install_result.updates.values() | selectattr('installed', 'equalto', false) }}"
        - name: "Display the not installed updates list"
          ansible.builtin.debug: var=win_updates_not_installed

        - name: "Set fact of failure messages of not installed updates"
          ansible.builtin.set_fact:
            win_updates_failure_msgs: "{{ win_updates_not_installed | map(attribute='failure_msg') | select('defined') }}"
        - name: "Set fact of the lengths of failure messages and not installed updates lists"
          ansible.builtin.set_fact:
            win_updates_failure_msgs_len: "{{ win_updates_failure_msgs | length }}"
            win_updates_not_installed_len: "{{ win_updates_not_installed | length }}"

        - name: "No failure messages for not installed updates"
          ansible.builtin.debug:
            msg: >-
              {{ win_updates_not_installed_len | int - win_updates_failure_msgs_len | int }} updates
              are not installed and without failure messages, which can not be ignored.
          when: win_updates_failure_msgs_len != win_updates_not_installed_len

        - name: "Get failure messages for all not installed updates"
          when: win_updates_failure_msgs_len == win_updates_not_installed_len
          block:
            - name: "Set fact of failure messages can not be ignored"
              ansible.builtin.set_fact:
                win_updates_failure_msgs: "{{ win_updates_failure_msgs | reject('search', item) }}"
              loop: "{{ win_updates_ignore_kws }}"
            - name: "Set fact of Windows online updates install status"
              ansible.builtin.set_fact:
                win_online_updates_succeed: true
              when: win_updates_failure_msgs | length == 0

- name: "Display Windows online updates install status"
  ansible.builtin.debug:
    msg:
      - "Windows online updates install succeeds: {{ win_online_updates_succeed }}"
      - "There are Windows online updates installed in guest OS : {{ win_online_updates_installed }}"
