# Copyright 2021-2024 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Shutdown or restart Windows guest OS
# Parameters:
#   set_win_power_state: specify the power operation, valid values
#     are "shutdown" or "restart".
#   win_reboot_timeout: maximum seconds to wait for machine to re-appear on the network.
#     Default value is 600 seconds.
#   win_query_user_timeout: maximum seconds to wait for user logon.
#     Default value is 15 seconds.
#   win_reboot_ignore_error: whether to ignore OS reboot task failure or not,
#     Default value is false.
#
- name: "Set fact of the expected power state"
  ansible.builtin.set_fact:
    expected_power_state: >-
      {%- if set_win_power_state == "shutdown" -%}poweredOff
      {%- elif set_win_power_state == "restart" -%}poweredOn
      {%- endif -%}

- name: "Shutdown guest OS using powershell command"
  ansible.builtin.raw: 'stop-computer -Force'
  delegate_to: "{{ vm_guest_ip }}"
  when: set_win_power_state == "shutdown"

- name: "Restart OS using win_reboot module"
  ansible.windows.win_reboot:
    connect_timeout: 10
    reboot_timeout: "{{ win_reboot_timeout | default(900) }}"
  register: restart_guest_os
  delegate_to: "{{ vm_guest_ip }}"
  ignore_errors: "{{ win_reboot_ignore_error | default(false) }}"
  when: set_win_power_state == "restart"

- name: "Restart OS using win_reboot module failed"
  ansible.builtin.debug:
    msg:
      - "Restart guest OS using win_reboot module failed."
      - "Parameter 'win_reboot_ignore_error' is set to '{{ win_reboot_ignore_error | default(false) }}'."
      - "Please handle this situation in the following task."
  when:
    - set_win_power_state == "restart"
    - win_reboot_ignore_error | default(false)
    - restart_guest_os.failed is defined
    - restart_guest_os.failed

- name: "Check VM power state"
  when: not (set_win_power_state == "restart" and restart_guest_os.failed | default(false))
  block:
    - name: "Wait 15 seconds to before checking power status"
      ansible.builtin.pause:
        seconds: 15

    - name: "Check VM power state '{{ expected_power_state }}'"
      include_tasks: ../../common/vm_wait_power_state.yml
      vars:
        expected_power_status: "{{ expected_power_state }}"

    - name: "Check OS restarted"
      when: set_win_power_state == "restart"
      block:
        - name: "Check winrm connectable after OS restart"
          include_tasks: win_check_winrm.yml
        # Check user logon in console session
        - name: "Query user in guest OS after OS restart"
          ansible.windows.win_shell: "query user console"
          register: query_user_result
          ignore_errors: true
          delegate_to: "{{ vm_guest_ip }}"
          ignore_unreachable: true
          retries: "{{ ((win_query_user_timeout | default(15) | int) / 5) | int }}"
          delay: 5
          until:
            - query_user_result.stdout_lines is defined
            - query_user_result.stdout_lines | length != 0
        - name: "Check query user result"
          ansible.builtin.assert:
            that:
              - query_user_result.stdout_lines is defined
              - query_user_result.stdout_lines | length != 0
            fail_msg: "Not get logon user in console session after {{ win_query_user_timeout | default(15) }} seconds: {{ query_user_result }}"
