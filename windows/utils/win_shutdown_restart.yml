# Copyright 2021-2024 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
# Shutdown or restart Windows guest OS
# Parameters:
#   set_win_power_state: specify the power operation, valid values
#     are "shutdown" or "restart".
#   win_reboot_timeout: maximum seconds to wait for machine to re-appear on the network.
#     Default value is 600 seconds.
#
- name: "Shutdown guest OS inside OS"
  when: set_win_power_state == "shutdown"
  block:
    - name: "Execute shutdown OS command"
      ansible.builtin.raw: 'stop-computer -Force'
      delegate_to: "{{ vm_guest_ip }}"
    - name: "Set fact of the expected status"
      ansible.builtin.set_fact:
        expected_power_state: "poweredOff"

- name: "Restart guest OS inside OS"
  when: set_win_power_state == "restart"
  block:
    - name: "Restart OS using win_reboot module"
      ansible.windows.win_reboot:
        reboot_timeout: "{{ win_reboot_timeout | default(600) }}"
      register: restart_guest_os
      delegate_to: "{{ vm_guest_ip }}"
    - name: "Display the win_reboot result"
      ansible.builtin.debug: var=restart_guest_os
      when: enable_debug
    - name: "Set fact of the expected status"
      ansible.builtin.set_fact:
        expected_power_state: "poweredOn"

- name: "Wait 15 seconds to before checking power status"
  ansible.builtin.pause:
    seconds: 15

- name: "Check VM power state '{{ expected_power_state }}'"
  include_tasks: ../../common/vm_wait_power_state.yml
  vars:
    expected_power_status: "{{ expected_power_state }}"

- name: "Check OS restarted"
  when: set_win_power_state == "restart"
  block:
    - name: "Check winrm connectable after OS restart"
      include_tasks: win_check_winrm.yml
    # Check user logon in console session
    - name: "Query user in guest OS after OS restart"
      ansible.windows.win_shell: "query user console"
      register: query_user_result
      ignore_errors: true
      delegate_to: "{{ vm_guest_ip }}"
      ignore_unreachable: true
      retries: 5
      delay: 3
      until:
        - query_user_result.stdout_lines is defined
        - query_user_result.stdout_lines | length != 0
    - name: "Check query user result"
      ansible.builtin.assert:
        that:
          - query_user_result.stdout_lines is defined
          - query_user_result.stdout_lines | length != 0
        fail_msg: "Not get logon user in console session after 15 seconds: {{  query_user_result }}"
