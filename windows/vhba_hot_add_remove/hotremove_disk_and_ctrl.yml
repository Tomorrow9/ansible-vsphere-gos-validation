# Copyright 2021-2024 VMware, Inc.
# SPDX-License-Identifier: BSD-2-Clause
---
- name: "Get disk and controller number before hot removing disk"
  include_tasks: get_guest_disk_ctrl_num.yml
  vars:
    disk_ops_stage: 'before'

- name: "Get VM disk controller info before hot removing disk"
  include_tasks: ../../common/vm_get_disk_controller_facts.yml

- name: "Set fact of the number of disks attached to the controller"
  ansible.builtin.set_fact:
    disk_num_under_remove: >-
      {{ disk_controller_facts['disk_controller_data'][disk_controller][new_vhba_bus_number | string]['controller_disks_devicekey'] | default([]) }}

- name: "Print the number of the disks attached to the controller"
  ansible.builtin.debug:
    msg: "Disks attached to the '{{ test_disk_ctrl_type }}' controller will be removed: {{ disk_num_under_remove | length }}"

- name: "Hot remove disks attached to the controller"
  when: disk_num_under_remove | length > 0
  block:
    - name: "Hot remove disk"
      include_tasks: ../../common/vm_hot_add_remove_disk.yml
      vars:
        disk_operation: 'absent'
        ctrl_number: "{{ new_vhba_bus_number }}"
        unit_number: "{{ rm_disk_unit_num }}"
        disk_controller_type: "{{ test_disk_ctrl_type }}"
      loop: "{{ range(0, (disk_num_under_remove | length)) }}"
      loop_control:
        loop_var: rm_disk_unit_num

    - name: "Wait 10 seconds after disk hot remove"
      ansible.builtin.pause:
        seconds: 10

- name: "Hot remove new added disk controller"
  include_tasks: ../../common/vm_hot_add_remove_disk_ctrl.yml
  vars:
    disk_controller_ops: "absent"
    disk_controller_type: "{{ test_disk_ctrl_type }}"
    disk_controller_number: "{{ new_vhba_bus_number }}"

- name: "Wait 10 seconds after hot removing controller"
  ansible.builtin.pause:
    seconds: 10

- name: "Get disk and controller number after hot removing"
  include_tasks: get_guest_disk_ctrl_num.yml
  vars:
    disk_ops_stage: 'after'

- name: "Check disk and controller number after hot removing"
  ansible.builtin.assert:
    that:
      - disk_num_guest_after | int == (disk_num_guest_before | int - disk_num_under_remove | length)
      - ctrl_num_guest_after | int == ctrl_num_guest_before | int - 1
    fail_msg: >-
      After hot removing new added disk controller and disks,
      disk controller number is '{{ ctrl_num_guest_after }}', disk number is '{{ disk_num_guest_after }}',
      which are not the expected values,
      disk controller '{{ ctrl_num_guest_before | int - 1 }}', disk number
      '{{ disk_num_guest_before | int - disk_num_under_remove | length }}'.
